//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoServiciosWeb.WSEditorialService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSEjemplar", Namespace="http://schemas.datacontract.org/2004/07/WcfBiblioteca")]
    [System.SerializableAttribute()]
    public partial class WSEjemplar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FPublicacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumPaginasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FPublicacion {
            get {
                return this.FPublicacionField;
            }
            set {
                if ((this.FPublicacionField.Equals(value) != true)) {
                    this.FPublicacionField = value;
                    this.RaisePropertyChanged("FPublicacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN {
            get {
                return this.ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.ISBNField, value) != true)) {
                    this.ISBNField = value;
                    this.RaisePropertyChanged("ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumPaginas {
            get {
                return this.NumPaginasField;
            }
            set {
                if ((this.NumPaginasField.Equals(value) != true)) {
                    this.NumPaginasField = value;
                    this.RaisePropertyChanged("NumPaginas");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSEditorialService.IWSEjemplarService")]
    public interface IWSEjemplarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/getEjemplarById", ReplyAction="http://tempuri.org/IWSEjemplarService/getEjemplarByIdResponse")]
        ProyectoServiciosWeb.WSEditorialService.WSEjemplar getEjemplarById(int idEjemplar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/getEjemplarById", ReplyAction="http://tempuri.org/IWSEjemplarService/getEjemplarByIdResponse")]
        System.Threading.Tasks.Task<ProyectoServiciosWeb.WSEditorialService.WSEjemplar> getEjemplarByIdAsync(int idEjemplar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/getAll", ReplyAction="http://tempuri.org/IWSEjemplarService/getAllResponse")]
        ProyectoServiciosWeb.WSEditorialService.WSEjemplar[] getAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/getAll", ReplyAction="http://tempuri.org/IWSEjemplarService/getAllResponse")]
        System.Threading.Tasks.Task<ProyectoServiciosWeb.WSEditorialService.WSEjemplar[]> getAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/delete", ReplyAction="http://tempuri.org/IWSEjemplarService/deleteResponse")]
        void delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/delete", ReplyAction="http://tempuri.org/IWSEjemplarService/deleteResponse")]
        System.Threading.Tasks.Task deleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/create", ReplyAction="http://tempuri.org/IWSEjemplarService/createResponse")]
        string create(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/create", ReplyAction="http://tempuri.org/IWSEjemplarService/createResponse")]
        System.Threading.Tasks.Task<string> createAsync(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/update", ReplyAction="http://tempuri.org/IWSEjemplarService/updateResponse")]
        string update(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSEjemplarService/update", ReplyAction="http://tempuri.org/IWSEjemplarService/updateResponse")]
        System.Threading.Tasks.Task<string> updateAsync(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSEjemplarServiceChannel : ProyectoServiciosWeb.WSEditorialService.IWSEjemplarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSEjemplarServiceClient : System.ServiceModel.ClientBase<ProyectoServiciosWeb.WSEditorialService.IWSEjemplarService>, ProyectoServiciosWeb.WSEditorialService.IWSEjemplarService {
        
        public WSEjemplarServiceClient() {
        }
        
        public WSEjemplarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSEjemplarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSEjemplarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSEjemplarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProyectoServiciosWeb.WSEditorialService.WSEjemplar getEjemplarById(int idEjemplar) {
            return base.Channel.getEjemplarById(idEjemplar);
        }
        
        public System.Threading.Tasks.Task<ProyectoServiciosWeb.WSEditorialService.WSEjemplar> getEjemplarByIdAsync(int idEjemplar) {
            return base.Channel.getEjemplarByIdAsync(idEjemplar);
        }
        
        public ProyectoServiciosWeb.WSEditorialService.WSEjemplar[] getAll() {
            return base.Channel.getAll();
        }
        
        public System.Threading.Tasks.Task<ProyectoServiciosWeb.WSEditorialService.WSEjemplar[]> getAllAsync() {
            return base.Channel.getAllAsync();
        }
        
        public void delete(int id) {
            base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task deleteAsync(int id) {
            return base.Channel.deleteAsync(id);
        }
        
        public string create(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar) {
            return base.Channel.create(ejemplar);
        }
        
        public System.Threading.Tasks.Task<string> createAsync(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar) {
            return base.Channel.createAsync(ejemplar);
        }
        
        public string update(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar) {
            return base.Channel.update(ejemplar);
        }
        
        public System.Threading.Tasks.Task<string> updateAsync(ProyectoServiciosWeb.WSEditorialService.WSEjemplar ejemplar) {
            return base.Channel.updateAsync(ejemplar);
        }
    }
}
